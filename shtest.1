.\" Text automatically generated by md2man 
.TH shtest adoc "March 10, 2018" "Linux" "Linux Reference Manual"
.SH NAME
\fBshtest \fP- run command line tests
.PP
.SH SYNOPSIS
.nf
.fam C
shtest [\fB-qrbefCdxh\fP] [\fB-s\fP EXPR] [\fB-E\fP ENV] [\fB-i\fP INDENT] TEST+
.PP
.fam T
.fi
.SH DESCRIPTION
shtest is testing script which executes commands from test file and compares
with model output.
.PP
Best use cases:
.IP \(bu 3
testing of command's multiple arguments under different shells
.IP \(bu 3
deployment checks on new platform (to ensure oll runs korrect)
.PP
Characteristic details:
.IP \(bu 3
each command is run under fresh spawned shell with predefined environment
.IP \(bu 3
stdout and stderr are combined
.IP \(bu 3
can be embedded in other documentation with flexible prefix
.IP \(bu 3
run log with error output is stored in <test_file_name>.err
.PP
Embedding in other formats is done changing "indent" by defining it at runtime
with "-i" (indent is called "indent" to distinguish with test prefix).
.PP
.SH USAGE
You just write prefixed lines, like:
.PP
.nf
.fam C
    $ uname -a
    $ date
.fam T
.fi
.PP
then run "shtest \fB-r\fP FILE.t" to refill tests and then "shtest FILE.t" .
.PP
.SH OPTIONS
.TP
.B
\fB-s\fP EXPR
:: shell expression which will get test command piped to
e.g. 'zsh \fB-c\fP "emulate sh;sh"' or 'bash \fB--posix\fP'; default is
"/bin/sh"
.TP
.B
\fB-q\fP
:: quite test; exit code set to number of failed tests
default is verbose output
.TP
.B
\fB-r\fP
:: refill all tests output (like cram \fB-iy\fP)
.TP
.B
\fB-c\fP
:: clear all model output from test (higher priority than \fB-r\fP)
.TP
.B
\fB-i\fP INDENT
:: indent (default is "    ")
.TP
.B
\fB-b\fP
:: fail test on unhandled error code
.TP
.B
\fB-e\fP
:: keep default environment (don't inherit LC_ALL and PATH from
shell)
.TP
.B
\fB-E\fP ENV
:: set custom environment prefix for each call
.TP
.B
\fB-f\fP
:: force tests ignoring faults
.TP
.B
\fB-C\fP
:: do not colorize diff
.TP
.B
\fB-d\fP
:: discard commands stderr
.TP
.B
\fB-x\fP
:: show which commands are executed
.TP
.B
\fB-h\fP
:: this help
.PP
.SH ENVIRONMENT
.TP
.B
LC_ALL
:: default is C
.TP
.B
PATH
:: by default PATH isn't passed
.PP
Without \fB-e\fP option environment string is concatenated with \fB-E\fP argument value.
.PP
.SH FORMAT
Any line not starting with indent is ignored. Any indented line without context
is ignored.
.PP
Special meaning indented lines are:
.TP
.B
<indent> % CMD
:: auxiliary command to execute (output/exit code isn't
checked), no multiline commands
.TP
.B
<indent> $ CMD
:: command to execute
.TP
.B
<indent> > CMD
:: continuation of command
.TP
.B
<indent> ? NUM
:: expected exit code NUM
.TP
.B
<indent> STR
:: model output - compared until not-output line encountered or
EOF
.PP
.SH EXIT STATUS
.TP
.B
0
:: normal exit
.TP
.B
>0
:: number of tests passed before fail
.TP
.B
80
:: normal interrupt from test (brick with 0 exit code)
.TP
.B
81
:: unhandled exit code from test
.TP
.B
82
:: shtest error (mkdir faults and so on)
.TP
.B
83
:: abnormal interrupt from test (brick with 83 exit code)
.PP
.SH FILES
.TP
.B
test_file.t
:: test file
.TP
.B
test_file.err
:: execution log with error diffs
.PP
.SH BUGS
If you get "not found" error check shebang correctness with:
.PP
.nf
.fam C
    $ /bin/sh -c yourprog
.fam T
.fi
.PP
.SH AUTHORS
willee <v4r@trioptimum.com>, 2014
ulcer <ulcer@sdf.org>, 2017
.PP
Licensed under GPLv3 or later.
For full license see COPYING file in program's distribution.
.PP
.SH SEE ALSO
cram https://bitheap.org/cram/ , tush https://github.com/darius/tush
